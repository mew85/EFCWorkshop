//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 20.10.2025 10:21:27
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;

namespace EFC02.Lib.Models
{
    [Table("mitarbeiter", Schema = "dbo")]
    [Index(nameof(Prsnr), IsUnique = true)] //bestimmt, dass der Inhalt der angegebenen Spalte nur einmalig vorkommen kann
    public partial class Mitarbeiter {

        public Mitarbeiter()
        {
            this.Extern = false;
            OnCreated();
        }

        [Key]
        public int MitarbeiterId { get; set; }

        [Required]
        [StringLength(4)]
        [Unicode(false)]
        public string Prsnr { get; set; }

        [Required]
        [StringLength(50)]
        public string Nachname { get; set; }

        [StringLength(50)]
        public string Vorname { get; set; }

        [Required]
        [Unicode(false)]
        public eGeschlecht Geschlecht { get; set; } = eGeschlecht.x;

        public DateOnly DatumEintritt { get; set; }

        public DateOnly? DatumAustritt { get; set; }

        public bool? Extern { get; set; }

        [Required]
        [StringLength(50)]
        [Unicode(false)]
        public string Email { get; set; }

        [StringLength(10)]
        [Unicode(false)]
        public string Durchwahl { get; set; }

        public int? AbteilungId { get; set; }

        public int? FunktionId { get; set; }

        public DateOnly? Geburtsdatum { get; set; }

        public int? NiederlassungId { get; set; }


        public virtual Funktion Funktion { get; set; }


        public virtual Abteilung Abteilung { get; set; }


        public virtual Niederlassung Niederlassung { get; set; }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion
    }

    public enum eGeschlecht
    {
        w, m, d, x
    }
}
