// <auto-generated />
using System;
using EFC02.Lib.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFC02.Lib.Migrations
{
    [DbContext(typeof(EFC02DBContext))]
    [Migration("20251021081054_ErsteMigration_EFC02")]
    partial class ErsteMigration_EFC02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFC02.Lib.Models.Abteilung", b =>
                {
                    b.Property<int>("AbteilungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AbteilungId"));

                    b.Property<string>("Abteilungsbezeichnung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AbteilungId");

                    b.HasIndex("Abteilungsbezeichnung")
                        .IsUnique();

                    b.ToTable("abteilung", "dbo");
                });

            modelBuilder.Entity("EFC02.Lib.Models.Funktion", b =>
                {
                    b.Property<int>("FunktionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FunktionId"));

                    b.Property<string>("Funktionsbezeichnung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FunktionId");

                    b.HasIndex("Funktionsbezeichnung")
                        .IsUnique();

                    b.ToTable("funktion", "dbo");
                });

            modelBuilder.Entity("EFC02.Lib.Models.Mitarbeiter", b =>
                {
                    b.Property<int>("MitarbeiterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MitarbeiterId"));

                    b.Property<int?>("AbteilungId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DatumAustritt")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DatumEintritt")
                        .HasColumnType("date");

                    b.Property<string>("Durchwahl")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Extern")
                        .HasColumnType("bit");

                    b.Property<int?>("FunktionId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Geburtsdatum")
                        .HasColumnType("date");

                    b.Property<string>("Geschlecht")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NiederlassungId")
                        .HasColumnType("int");

                    b.Property<string>("Prsnr")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MitarbeiterId");

                    b.HasIndex("AbteilungId");

                    b.HasIndex("FunktionId");

                    b.HasIndex("NiederlassungId");

                    b.HasIndex("Prsnr")
                        .IsUnique();

                    b.ToTable("mitarbeiter", "dbo");
                });

            modelBuilder.Entity("EFC02.Lib.Models.Niederlassung", b =>
                {
                    b.Property<int>("NiederlassungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NiederlassungId"));

                    b.Property<DateTime>("AngelegtAm")
                        .HasColumnType("datetime2");

                    b.Property<string>("AngelegtVon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("GeaendertAm")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeaendertVon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IstAktiv")
                        .HasColumnType("bit");

                    b.Property<bool>("IstGeloescht")
                        .HasColumnType("bit");

                    b.Property<string>("Niederlassungsbezeichnung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Niederlassungsvorwahl")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NiederlassungId");

                    b.HasIndex("Niederlassungsbezeichnung")
                        .IsUnique();

                    b.ToTable("niederlassung", "dbo");
                });

            modelBuilder.Entity("EFC02.Lib.Models.Mitarbeiter", b =>
                {
                    b.HasOne("EFC02.Lib.Models.Abteilung", "Abteilung")
                        .WithMany("MitarbeiterListe")
                        .HasForeignKey("AbteilungId");

                    b.HasOne("EFC02.Lib.Models.Funktion", "Funktion")
                        .WithMany("MitarbeiterListe")
                        .HasForeignKey("FunktionId");

                    b.HasOne("EFC02.Lib.Models.Niederlassung", "Niederlassung")
                        .WithMany("MitarbeiterListe")
                        .HasForeignKey("NiederlassungId");

                    b.Navigation("Abteilung");

                    b.Navigation("Funktion");

                    b.Navigation("Niederlassung");
                });

            modelBuilder.Entity("EFC02.Lib.Models.Abteilung", b =>
                {
                    b.Navigation("MitarbeiterListe");
                });

            modelBuilder.Entity("EFC02.Lib.Models.Funktion", b =>
                {
                    b.Navigation("MitarbeiterListe");
                });

            modelBuilder.Entity("EFC02.Lib.Models.Niederlassung", b =>
                {
                    b.Navigation("MitarbeiterListe");
                });
#pragma warning restore 612, 618
        }
    }
}
