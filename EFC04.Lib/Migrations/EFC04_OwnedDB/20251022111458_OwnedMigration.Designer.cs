// <auto-generated />
using System;
using EFC04.Lib.Models.Owned;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFC04.Lib.Migrations.EFC04_OwnedDB
{
    [DbContext(typeof(EFC04_OwnedDBContext))]
    [Migration("20251022111458_OwnedMigration")]
    partial class OwnedMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFC04.Lib.Models.Owned.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdresseId"));

                    b.Property<string>("Hausnummer")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("KundeId")
                        .HasColumnType("int");

                    b.Property<string>("Land")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Plz")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Strasse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AdresseId");

                    b.HasIndex("KundeId");

                    b.ToTable("Adresse", "owned");
                });

            modelBuilder.Entity("EFC04.Lib.Models.Owned.Kunde", b =>
                {
                    b.Property<int>("KundeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KundeId"));

                    b.Property<DateOnly?>("Geburtsdatum")
                        .HasPrecision(0)
                        .HasColumnType("date");

                    b.Property<string>("Geschlecht")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<DateOnly?>("Kundeseit")
                        .HasPrecision(0)
                        .HasColumnType("date");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Vorname")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("KundeId");

                    b.ToTable("Kunde", "owned");
                });

            modelBuilder.Entity("EFC04.Lib.Models.Owned.Adresse", b =>
                {
                    b.HasOne("EFC04.Lib.Models.Owned.Kunde", "Kunde")
                        .WithMany()
                        .HasForeignKey("KundeId");

                    b.Navigation("Kunde");
                });

            modelBuilder.Entity("EFC04.Lib.Models.Owned.Kunde", b =>
                {
                    b.OwnsOne("EFC04.Lib.Models.Owned.KundeDetails", "Kundedetails", b1 =>
                        {
                            b1.Property<int>("KundeId")
                                .HasColumnType("int");

                            b1.Property<int?>("AnschriftAdresseId")
                                .HasColumnType("int");

                            b1.Property<string>("Email")
                                .HasMaxLength(20)
                                .IsUnicode(false)
                                .HasColumnType("varchar(20)");

                            b1.Property<string>("Telefon")
                                .HasMaxLength(20)
                                .IsUnicode(false)
                                .HasColumnType("varchar(20)");

                            b1.HasKey("KundeId");

                            b1.HasIndex("AnschriftAdresseId");

                            b1.ToTable("Kunde", "owned");

                            b1.HasOne("EFC04.Lib.Models.Owned.Adresse", "Anschrift")
                                .WithMany()
                                .HasForeignKey("AnschriftAdresseId");

                            b1.WithOwner()
                                .HasForeignKey("KundeId");

                            b1.Navigation("Anschrift");
                        });

                    b.Navigation("Kundedetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
